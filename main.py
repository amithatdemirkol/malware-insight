from flask import Flask, request, render_template, redirect, flash
import os
import tempfile
from werkzeug.utils import secure_filename  # Importing the secure_filename function
from modules.signature_check import get_file_signature, check_signature
from modules.behavior_analysis import load_yara_rules, analyze_file_with_yara
from modules.virustotal_api import scan_file, get_scan_report

app = Flask(__name__)
app.secret_key = 'supersecretkey'  # Defining a secret key for security

# Known malware signatures are defined here (for example)
known_signatures = [
    'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',  # Example SHA-256 signature
    # More signatures can be added
]

# Load YARA rules at startup
yara_rules = load_yara_rules('rules/malware_rules.yar')

# Home page (file upload)
@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        # File check
        if 'file' not in request.files:
            flash('No file found!')
            return redirect(request.url)
        
        file = request.files['file']

        if file.filename == '':
            flash('Please select a file!')
            return redirect(request.url)

        # When a file is uploaded
        if file:
            # Creating a temporary directory
            with tempfile.TemporaryDirectory() as temp_dir:
                # Saving the file to the temporary directory
                file_path = os.path.join(temp_dir, secure_filename(file.filename))
                file.save(file_path)

                # Getting the file signature (SHA-256)
                file_signature = get_file_signature(file_path)

                # Comparing the file signature with known malware signatures
                is_malicious = check_signature(file_signature, known_signatures)

                # Performing behavioral analysis with YARA
                yara_matches = analyze_file_with_yara(file_path, yara_rules)
                if yara_matches:
                    yara_result = f"YARA Analysis: Malicious behaviors detected! ({len(yara_matches)} matches)"
                else:
                    yara_result = "YARA Analysis: No malicious behavior detected."

                # Starting VirusTotal scan
                scan_id, vt_error = scan_file(file_path)
                if scan_id:
                    report, report_error = get_scan_report(scan_id)
                    if report:
                        positives = report.get('positives', 0)
                        total = report.get('total', 0)
                        vt_result = f"VirusTotal Result: {positives}/{total} scanners flagged the file as malicious."
                    else:
                        vt_result = f"VirusTotal Report Error: {report_error}"
                else:
                    vt_result = f"VirusTotal Scan Error: {vt_error}"

                # Displaying analysis results
                if is_malicious:
                    result = f'The file contains malware! (Signature: {file_signature})<br>{yara_result}<br>{vt_result}'
                else:
                    result = f'The file appears clean. (Signature: {file_signature})<br>{yara_result}<br>{vt_result}'

                return render_template('result.html', result=result)

    return render_template('index.html')

if __name__ == '__main__':
    # Running the application
    app.run(debug=True)
